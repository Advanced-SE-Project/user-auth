name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345678
          POSTGRES_DB: budget_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # List the files in the working directory after checkout
      - name: List files in the working directory (after checkout)
        run: |
          echo "Current working directory:"
          pwd
          echo "Listing files after checkout:"
          ls -alh $GITHUB_WORKSPACE

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Set up environment variables for testing
      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:12345678@localhost:5432/budget_db" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=$(python -c 'import secrets; print(secrets.token_hex(32))')" >> $GITHUB_ENV

      # Run database migrations if needed
      - name: Initialize database schema
        run: |
          psql $DATABASE_URL -c "CREATE TABLE IF NOT EXISTS users (id SERIAL PRIMARY KEY, username VARCHAR(50) UNIQUE, password VARCHAR(255));"

      # Run Unit Tests
      - name: Run Unit Tests
        run: pytest tests/test_unit.py

      # Run Integration Tests
      - name: Run Integration Tests
        run: pytest tests/test_integration.py

  build-and-push-docker:
    needs: build-and-test  # This job depends on the previous job
    runs-on: ubuntu-latest

    steps:
      # Checkout the code again in this job
      - name: Checkout code
        uses: actions/checkout@v2  # Make sure the files are available for Docker build

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # List the files in the current directory before building the Docker image
      - name: List files before building Docker image
        run: |
          echo "Current working directory before Docker build:"
          pwd
          echo "Listing files before Docker build:"
          ls -alh

      # Build Docker image from the correct directory
      - name: Build Docker image
        run: |
          docker build -f $GITHUB_WORKSPACE/Dockerfile $GITHUB_WORKSPACE -t erisahalipaj2107/user-auth:latest

      - name: Push Docker image
        run: |
          docker push erisahalipaj2107/user-auth:latest
