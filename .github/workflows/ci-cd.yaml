name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repo
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the code from your repository

      # Verify if the checkout step succeeded
      - name: Verify if checkout was successful
        run: |
          echo "Listing files after checkout:"
          ls -alh $GITHUB_WORKSPACE  # List the files in the workspace after checkout
          echo "Current working directory:"
          pwd  # Show the current directory

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # List files in the current directory (for debugging before Docker build)
      - name: List files before building Docker image
        run: |
          echo "Current working directory before Docker build:"
          pwd
          echo "Listing files in the current directory before build:"
          ls -alh

      # Build Docker image from the correct directory (first User-Authentication folder)
      - name: Build Docker image
        run: |
          docker build -f $GITHUB_WORKSPACE/Dockerfile $GITHUB_WORKSPACE -t erisahalipaj2107/user-auth:latest

      - name: Push Docker image
        run: |
          docker push erisahalipaj2107/user-auth:latest

  restart-application:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Restart Application
        run: |
          ssh -i ${{ secrets.SSH_KEY }} user@${{ secrets.DROPLET_IP }} "docker-compose -f /path/to/docker-compose.yml up -d"
